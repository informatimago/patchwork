(in-package :pw)(make-win 'c-pw-window "14-tutorial" 2949128 35389870 (list (sbox 'c-pw-out 'out "out" nil 6029532 (list "foo")) (sbox 'c-pw-functional 'g-round "g-round" nil 15335550 (list 0)) (sbox 'c-patch-score-voice 'rtm "rtm" nil 29884634 (list "(4 4)" "((4 (1 1 1 1)))" "(6000)" 60 "nil") nil (list '(327685 13107890 0 1 100 10 9831080 3 50 20 1 3276810 13435590 "rtm") (make-instance 'c-measure-line :measures (list (make-instance 'c-measure :low "4" :metronome 60 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(1) (list (make-c-chord 0 (list (make-c-note 6000 35 nil 200 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1.0) (list)) (beat-constructor 1 '(1) (list (make-c-chord 200 (list (make-c-note 6000 35 nil 133 100 1 nil 0 0 nil))))) (beat-constructor 1 '((1 (1.0 2))) (list (make-c-chord 333 (list (make-c-note 6000 35 nil 95 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "4" :metronome 60 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '((1 (2.0 4 1))) (list (make-c-chord 428 (list (make-c-note 6000 35 nil 57 100 1 nil 0 0 nil))) (make-c-chord 485 (list (make-c-note 6000 35 nil 55 100 1 nil 0 0 nil))))) (beat-constructor 1 '((1 (2.0 2 1))) (list (make-c-chord 540 (list (make-c-note 6000 35 nil 40 100 1 nil 0 0 nil))) (make-c-chord 580 (list (make-c-note 6000 35 nil 34 100 1 nil 0 0 nil))))) (beat-constructor 1 '((1 (1.0 2 2 2))) (list (make-c-chord 614 (list (make-c-note 6000 35 nil 28 100 1 nil 0 0 nil))) (make-c-chord 642 (list (make-c-note 6000 35 nil 29 100 1 nil 0 0 nil))) (make-c-chord 671 (list (make-c-note 6000 35 nil 29 100 1 nil 0 0 nil))))) (beat-constructor 1 '((1 (1 1 -2))) (list (make-c-chord 700 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 725 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))))))) nil)) (sbox 'c-pw-resize-x 'numbox "numbox" nil 9437389 (list 25) 2228270) (sbox 'c-pw-functional 'quantify "quantify" nil 24510684 (list "(100)" 60 "(4 4)" 8)) (sbox 'c-patch-chord-box-m 'chord "chord" nil 20119604 (list (note (list 6000 100 0 40 nil 1 100 nil) (list 6200 100 0 58 nil 1 100 nil) (list 6400 100 0 76 nil 1 100 nil) (list 6500 100 0 94 nil 1 100 nil) (list 6700 100 0 112 nil 1 100 nil) (list 6900 100 0 130 nil 1 100 nil) (list 7100 100 0 148 nil 1 100 nil) (list 7200 100 0 166 nil 1 100 nil))) nil :order) (sbox 'c-pw-functional 'g-scaling "g-scaling" nil 11141223 (list 0 0 0)) (sbox 'c-pw-functional 'sort-list "sort-list" nil 21037279 (list "(1 2)" "<")) (sbox 'c-pw-functional 'fibo-ser "fibo-ser" nil 1179747 (list 1 2 400)) (sbox 'c-pw-resize-x 'numbox "numbox" nil 10879022 (list 200) 2228270) (sbox 'c-pw-in 'in "in" nil 24838277 (list "foo")) (sbox 'c-pw-resize-x 'const "const" nil 20513098 (list ">") 2228270) (sbox 'c-pw-functional 'create-list "create-list" nil 27918454 (list 10 0 "(1 2)")) (sbox 'c-pw-resize-x 'length "length" nil 1900760 (list "(1 2)") 2228270)) (list (list 0 0 13) (list 1 0 6) (list 2 2 12) (list 2 4 4) (list 4 0 7) (list 6 0 8) (list 6 1 3) (list 6 2 9) (list 7 0 1) (list 7 1 11) (list 12 0 10) (list 12 2 5) (list 13 0 8)) t)